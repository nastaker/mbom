@model MBOM.Models.LoginView
@using Localization;
@{
    ViewBag.Title = Lang.Login;
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - @Lang.CompanyName</title>
    @Styles.Render("~/bundles/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"></script>
    <style type="text/css">
        html {
            height: 100%;
        }
        body {
            background-image: url('/Content/images/loginBackground.jpg');
            background-size: cover;
            height: 100%;
        }
        .mainform{
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: rgba(0,0,0,0.4) 5px 5px;
        }
    </style>
</head>
<body class="container">
    <div class="row align-items-center" style="height: 100%">
        <div class="col-sm-12 col-md-8 col-lg-6 mx-auto">
        @using (Html.BeginForm("Login", "User", @FormMethod.Post, new { @class = "mainform" }))
        {
            var groups = ViewData["Groups"] as List<Repository.AppWorkgroup>;
        <div class="form-horizontal">
            <h4>@Lang.UserLogin</h4>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.loginname)
                @Html.EditorFor(model => model.loginname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.loginname, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password)
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.groupid)
                @Html.DropDownListFor(model => model.groupid,
                new SelectList(groups, "CN_ID", "CN_NAME", groups.First().CN_ID), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.groupid, "", new { @class = "text-danger" })
            </div>

            <div class="form-check">
                @Html.EditorFor(model => model.rememberme, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.LabelFor(model => model.rememberme, new { @class = "form-check-label" })
                @Html.ValidationMessageFor(model => model.rememberme, "", new { @class = "text-danger" })
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <button type="submit" class="btn btn-primary">@Lang.Login</button>
        </div>
        }
        </div>
    </div>
</body>
</html>