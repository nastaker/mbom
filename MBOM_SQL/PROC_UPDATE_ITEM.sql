CREATE PROCEDURE PROC_UPDATE_ITEM
(
	@ITEMCODE VARCHAR(32),
	@ITEMNAME VARCHAR(32),
	@WEIGHT VARCHAR(32),
	@UNIT VARCHAR(32),
	@PRODUCTLINECODE VARCHAR(32),
	@TYPEIDS VARCHAR(32),
	@USERID INT,
	@NAME VARCHAR(32),
	@LOGIN VARCHAR(32)
)
AS
BEGIN
	DECLARE @MSG VARCHAR(200)
	DECLARE @SUCCESS BIT = 1
	DECLARE @ERROR INT = 0
	DECLARE @DATE DATETIME = GETDATE()
	-- 判断是添加还是更新
	DECLARE @ITEMID INT
	DECLARE @ISTOERP SMALLINT
	DECLARE @ISPDM BIT
	SELECT 
	@ITEMID = CN_ID,
	@ISPDM = CASE WHEN CN_PDM_CLS_ID > 0 THEN 1 ELSE 0 END,
	@ISTOERP = CN_IS_TOERP
	FROM TN_80_APP_0000_ITEM WHERE CN_ITEM_CODE = @ITEMCODE

	BEGIN TRANSACTION

	IF @ITEMID IS NULL
	BEGIN
		-- 是添加 
		INSERT INTO [dbo].[TN_80_APP_0000_ITEM]
			([CN_CODE]
			,[CN_ITEM_CODE]
			,[CN_NAME]
			,[CN_WEIGHT]
			,[CN_UNIT]
			,[CN_ITEM_PROLINE]
			,[CN_CREATE_BY]
			,[CN_CREATE_NAME]
			,[CN_CREATE_LOGIN]
			,[CN_SYS_STATUS]
			,[CN_DT_CREATE])
		VALUES
			(@ITEMCODE
			,@ITEMCODE
			,@ITEMNAME
			,@WEIGHT
			,@UNIT
			,@PRODUCTLINECODE
			,@USERID
			,@NAME
			,@LOGIN
			,'Y'
			,@DATE)
		SET @ERROR = @ERROR + @@ERROR
	END
	ELSE
	BEGIN 
		-- ITEMCODE、CODE、NAME无法修改，其他字段判断IS_TOERP、IS_PDM两个字段分别处理
		-- 如果TO_ERP>0修改前需要插入一条记录到HISTORY表
		INSERT INTO [dbo].[TN_80_APP_0000_ITEM_History]
           ([CN_ID]
           ,[CN_CODE]
           ,[CN_ITEM_CODE]
           ,[CN_SHARE_DRAFT]
           ,[CN_NAME]
           ,[CN_XH]
           ,[CN_GG]
           ,[CN_MBOM_VIRTUAL]
           ,[CN_MBOM_GROUP]
           ,[CN_WEIGHT]
           ,[CN_UNIT]
           ,[CN_PRODUCT_BASE]
           ,[CN_ITEM_PROLINE]
           ,[CN_DESIGN_PHASE]
           ,[CN_PDM_CLS_ID]
           ,[CN_PDM_OBJ_ID]
           ,[CN_BATCH_ID_INPUT]
           ,[CN_BATCH_ID_OUTPUT]
           ,[CN_CREATE_BY]
           ,[CN_CREATE_NAME]
           ,[CN_CREATE_LOGIN]
           ,[CN_SYS_STATUS]
           ,[CN_DT_CREATE]
           ,[CN_DT_EFFECTIVE_ERP]
           ,[CN_DT_EXPIRY_ERP]
           ,[CN_IS_TOERP]
           ,[CN_DT_TOERP]
           ,[CN_DESC]
           ,[CN_DOMAIN_CODE]
           ,[CN_SYS_NOTE]
           ,[CN_GUID]
           ,[CN_AssForBasePro]
           ,[CN_BZW_PRO]
           ,[CN_TEC_DESC]
           ,[CN_STANDARD_CODE]
           ,[CN_MESS_CLASS]
           ,[CN_FACE_DO]
           ,[CN_DT_CUR])
     SELECT
             CN_ID
			,CN_CODE
			,CN_ITEM_CODE
			,CN_SHARE_DRAFT
			,CN_NAME
			,CN_XH
			,CN_GG
			,CN_MBOM_VIRTUAL
			,CN_MBOM_GROUP
			,CN_WEIGHT
			,CN_UNIT
			,CN_PRODUCT_BASE
			,CN_ITEM_PROLINE
			,CN_DESIGN_PHASE
			,CN_PDM_CLS_ID
			,CN_PDM_OBJ_ID
			,CN_BATCH_ID_INPUT
			,CN_BATCH_ID_OUTPUT
			,CN_CREATE_BY
			,CN_CREATE_NAME
			,CN_CREATE_LOGIN
			,CN_SYS_STATUS
			,CN_DT_CREATE
			,CN_DT_EFFECTIVE_ERP
			,CN_DT_EXPIRY_ERP
			,CN_IS_TOERP
			,CN_DT_TOERP
			,CN_DESC
			,CN_DOMAIN_CODE
			,CN_SYS_NOTE
			,CN_GUID
			,CN_AssForBasePro
			,CN_BZW_PRO
			,CN_TEC_DESC
			,CN_STANDARD_CODE
			,CN_MESS_CLASS
			,CN_FACE_DO
			,@DATE
		FROM TN_80_APP_0000_ITEM
		WHERE CN_ITEM_CODE = @ITEMCODE
		AND CN_IS_TOERP > 0
		SET @ERROR = @ERROR + @@ERROR

		-- 非PDM可以修改其他字段
		UPDATE TN_80_APP_0000_ITEM
		SET 
			 CN_NAME = @ITEMNAME
			,CN_WEIGHT = @WEIGHT
			,CN_UNIT = @UNIT
			,CN_ITEM_PROLINE = @PRODUCTLINECODE
		WHERE CN_ITEM_CODE = @ITEMCODE
		AND CN_PDM_CLS_ID = 0
		SET @ERROR = @ERROR + @@ERROR
		-- 如果PDM数据只能修改TYPE,这里不做处理
	END
	-- 非PDM处理方法：
	-- 将ITEM未发布的类型删除
	DELETE FROM TN_80_APP_0000_ITEM_HLINK
	WHERE 
	CN_ID = @ITEMID
	AND CN_IS_TOERP = 0
	AND CN_COMPONENT_CLASS_ID = 105
	AND CN_COMPONENT_OBJECT_ID IN (2,3,13)
	AND @ISPDM = 0
	SET @ERROR = @ERROR + @@ERROR
	-- 将ITEM类型失效
	UPDATE TN_80_APP_0000_ITEM_HLINK
	SET 
		 CN_SYS_STATUS = 'N'
		,CN_DT_EXPIRY = @DATE
	WHERE
	CN_ID = @ITEMID
	AND CN_COMPONENT_CLASS_ID = 105
	AND CN_COMPONENT_OBJECT_ID IN (2,3,13)
	AND CN_SYS_STATUS = 'Y'
	SET @ERROR = @ERROR + @@ERROR
	-- 添加新的类型
	INSERT INTO [dbo].[TN_80_APP_0000_ITEM_HLINK]
        ([CN_ID]
        ,[CN_COMPONENT_CLASS_ID]
        ,[CN_COMPONENT_OBJECT_ID]
        ,[CN_DISPLAYNAME]
        ,[CN_CREATE_BY]
        ,[CN_CREATE_NAME]
        ,[CN_CREATE_LOGIN]
        ,[CN_SYS_STATUS]
        ,[CN_DT_CREATE]
        ,[CN_DT_EFFECTIVE]
        ,[CN_DT_EXPIRY]
        ,[CN_IS_TOERP]
        ,[CN_DT_TOERP])
    SELECT
         @ITEMID
        ,105
        ,ITEMTYPE.CN_ID
        ,ITEMTYPE.CN_NAME
        ,@USERID
        ,@NAME
        ,@LOGIN
        ,'Y'
        ,@DATE
        ,@DATE
        ,'2100-01-01'
        ,0
        ,'2100-01-01'
	FROM DBO.SPLIT(@TYPEIDS,DEFAULT)
	INNER JOIN TN_50_DIC_0005_ITEMTYPE AS ITEMTYPE ON ITEMTYPE.CN_ID = ID AND ITEMTYPE.CN_ID IN (2,3,13)
	SET @ERROR = @ERROR + @@ERROR

	IF @ERROR = 0 
	BEGIN
		COMMIT TRANSACTION
		SET @MSG = CASE WHEN @ITEMID = 0 THEN '添加物料成功' ELSE 
			CASE WHEN @ISTOERP > 0 THEN '当前物料已向MDM发布过，您的修改结果将会再次发布。' ELSE '已更新物料信息' END
		END
		SELECT @MSG AS MSG, @SUCCESS AS SUCCESS
	END
	ELSE
	BEGIN
		ROLLBACK TRANSACTION
		SET @MSG = '更新物料信息失败，请联系管理员'
		SET @SUCCESS = 0
		SELECT @MSG AS MSG, @SUCCESS AS SUCCESS
	END
END;
GO